@model JG.Orchard.AmazonS3Storage.Models.JGS3StorageProviderSettingsRecord

@{
    Script.Require("jQuery").AtHead();
    var iamRole = Model.GetIAMRole();
    
    string iamRoleOptionLabel = "Use credentials associated with IAM Role (No IAM Role detected! Is this an EC2 instance?)";
    bool disableCustomOption = true;
    if (!string.IsNullOrWhiteSpace(iamRole)) {
        iamRoleOptionLabel = string.Format("Use credentials associated with IAM Role '{0}'", iamRole);
        disableCustomOption = false;
    }
}

<fieldset>
    <legend>@T("Amazon S3 Storage Provider Settings")</legend>
    <div>
        @Html.CheckBoxFor(m => m.UseCustomCredentials) @Html.LabelFor(m => m.UseCustomCredentials, "Use custom credentials",
        disableCustomOption ? new { Disabled="disabled", Checked="checked"} : null)
    </div>
    @if (!string.IsNullOrWhiteSpace(iamRole)) {
        <div>
            IAM Role: @iamRole
        </div>
    }
    <div>
        @Html.LabelFor(m => m.AWSAccessKey)
        @Html.EditorFor(m => m.AWSAccessKey)
        @Html.ValidationMessageFor(m => m.AWSAccessKey)        
    </div>
    <div>
        @Html.LabelFor(m => m.AWSSecretKey)
        @Html.EditorFor(m => m.AWSSecretKey)
        @Html.ValidationMessageFor(m => m.AWSSecretKey)        
    </div>
    <div>
        @Html.LabelFor(m => m.BucketName)
        @Html.EditorFor(m => m.BucketName)
        @Html.ValidationMessageFor(m => m.BucketName)        
    </div>
    <div>
        @Html.LabelFor(m => m.RegionEndpoint)
        @Html.DropDownListFor(m => m.RegionEndpoint,
            Model.GetEndpoints().Select(ep=>new SelectListItem(){Text=ep.DisplayName, Value=ep.SystemName, Selected=Model.RegionEndpoint==ep.SystemName}),
            "S3 Region Endpoint")
        @Html.ValidationMessageFor(m => m.RegionEndpoint)
    </div>
</fieldset>